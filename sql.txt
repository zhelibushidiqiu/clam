
	SHOW DATABASES; 	列出所有数据库

	CREATE DATABASE test;	创建一个新的数据库

	DROP DATABASE test;		删除一个数据库，

	注意：删除一个数据库将导致该数据库的所有表全部被删除。

	对一个数据库进行操作时，要首先将其切换为当前数据库：

	USE test;	将test切换为当前数据库

	SHOW TABLES;	列出当前数据库的所有表

	DESC students;	查看students表结构

	SHOW CREATE TABLE students;	查看创建表的SQL语句

	创建表使用CREATE TABLE语句，而删除表使用DROP TABLE语句

	DROP TABLE students;	删除students表

	修改表就比较复杂。如果要给students表新增一列birth

	ALTER TABLE students ADD COLUMN birthday varchare(10) NOT NULL;

	删除列使用：
	ALTER TABLE students DROP COLUMN birthday

	退出Mysql使用  exit


	克隆	git clone git@github.com:zhelibushidiqiu/jingjing.git
			
			git clone git@github.com:zhelibushidiqiu/jingjing.git


	三才图会
	
	
	查询：
		SELECT * FROM students;	显示所有列
		
		条件查询的语法就是：

		SELECT * FROM <表名> WHERE <条件表达式>
		
			WHERE字句：
			指定查询条件
			匹配符合条件的记录
			
			NOT AND OR 非，且，或，
			
			>= < <> =
		
		投影查询：显示指定列需写出列名，逗号分隔
			让结果集仅包含指定列。这种操作称为投影查询
		
		
			
		排序：
			ORDER BY，默认升序，加上DESC降序
			SELECT * FROM students ORDER BY score DESC;
			
			默认的排序规则是ASC：“升序”，即从小到大。
			ASC可以省略，即ORDER BY score ASC和ORDER BY score效果一样
		
		GROUP BY:
			分组
			
	修改数据：
			关系数据库的基本操作就是增删改查，即 CRUD
				Create Retrieve Update Delete
		
		对于增删改查，对应的sql语句分别是：
		
			INSERT：插入记录：
				当我们需要向数据库表中插入一条新记录时，就必须使用INSERT语句
				
				INSERT语句的基本语法是：
					INSERT INTO <表名> (字段1, 字段2, ...) VALUES (值1, 值2, ...);
				
				向students表插入一条新记录，先列举出需要插入的字段名称，
				然后在VALUES子句中依次写出对应字段的值：
					INSERT INTO students (class_id, name, gender, score) VALUES (2, '大牛', 'M', 80);
					-- 查询并观察结果:
					SELECT * FROM students;
					
					可以一次性添加多条记录，只需要在VALUES子句中指定多个记录值，
					每个记录是由(...)包含的一组值
				
			UPDATE：更新记录：
				如果要更新数据库表中的记录，我们就必须使用UPDATE语句
				
				UPDATE语句的基本语法是：
					UPDATE <表名> SET 字段1=值1, 字段2=值2, ... WHERE ...;
					
					
				例如，我们想更新students表id=1的记录的name和score这两个字段，
				先写出UPDATE students SET name='大牛', score=66，
				然后在WHERE子句中写出需要更新的行的筛选条件id=1
				
				UPDATE语句的WHERE条件和SELECT语句的WHERE条件其实是一样的，因此完全可以一次更新多条记录：

				-- 更新id=5,6,7的记录
				UPDATE students SET name='小牛', score=77 WHERE id>=5 AND id<=7;
				
				UPDATE语句中，更新字段时可以使用表达式。例如，把所有80分以下的同学的成绩加10分：

				-- 更新score<80的记录
				UPDATE students SET score=score+10 WHERE score<80;
				
				最后，要特别小心的是，UPDATE语句可以没有WHERE条件，例如：

				UPDATE students SET score=60;
				这时，整个表的所有记录都会被更新。所以，在执行UPDATE语句时要非常小心，
				最好先用SELECT语句来测试WHERE条件是否筛选出了期望的记录集，
				然后再用UPDATE更新
				
				使用UPDATE，我们就可以一次更新表中的一条或多条记录


			
			DELETE：删除记录：
				如果要删除数据库表中的记录，我们可以使用DELETE语句
				
				DELETE语句的基本语法是：

					DELETE FROM <表名> WHERE ...;
				
				
				-- 删除id=1的记录
				DELETE FROM students WHERE id=1;
				
				注意到DELETE语句的WHERE条件也是用来筛选需要删除的行，因此和UPDATE类似，
				DELETE语句也可以一次删除多条记录
				
				DELETE FROM students WHERE id>=5 AND id<=7;
				
				最后，要特别小心的是，和UPDATE类似，不带WHERE条件的DELETE语句会删除整个表的数据：
				DELETE FROM students;
				
				这时，整个表的所有记录都会被删除。所以，在执行DELETE语句时也要非常小心，
				最好先用SELECT语句来测试WHERE条件是否筛选出了期望的记录集，
				然后再用DELETE删除
				
				使用DELETE，我们就可以一次删除表中的一条或多条记录
				
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			